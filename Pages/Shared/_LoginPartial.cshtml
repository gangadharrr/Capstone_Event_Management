@using Microsoft.AspNetCore.Identity
@using Capstone_Event_Management.Models;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    string? returnUrl = null;
    var query = ViewContext.HttpContext.Request.Query;
    if (query.ContainsKey("returnUrl"))
    {
        returnUrl = query["returnUrl"];
    }
    ApplicationUser? identityUser = null;
}

<ul class="navbar-nav" id="profile-display-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        identityUser = await UserManager.GetUserAsync(User);
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage" ><img id="profile-picture-nav" src=@identityUser.ProfileUrl> @identityUser?.DisplayName</a>
        </li>
        <li class="nav-item" >
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="/">
                <button type="submit" class="nav-link btn btn-link text-dark" id="logout-button">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register" asp-route-returnUrl="@returnUrl">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@returnUrl">Login</a>
        </li>
    }
</ul>
<style>
    #profile-picture-nav {
        height: 39px;
        width: 39px;
        border-radius: 25px;
    }
    #profile-display-nav
    {
        display:flex;
        flex-direction:row;
        align-items:center;
    }
    #logout-button{
        padding: 0% 0% 9% 20%;
    }
</style>